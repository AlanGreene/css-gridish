@import "functions.scss";
@import "mixins.scss";
@import "variables.scss";
@import "utilities.scss";

html {
  font-size: map-get($grid-values, "rem") * 1px;
}

body {
  margin: 0;
}

.#{$prefix}-container {
  box-sizing: border-box;
  margin-left: auto;
  margin-right: auto;
  max-width: #{map-get($last, breakpoint)}rem;
  width: 100vw;
  @if $includeFlexFallback {
    overflow-x: hidden;
  }
}

@if $includeFlexFallback {
  @supports (display: grid) {
    .#{$prefix}-container {
      overflow-x: initial;
    }
  }
}

.#{$prefix}-container--left {
  margin-left: 0;
}

.#{$prefix}-container--right {
  margin-right: 0;
}

.#{$prefix}-grid {
  align-items: flex-start;
  box-sizing: border-box;
  @if $includeFlexFallback {
    display: flex;
  }
  display: grid;
  flex-wrap: wrap;
  position: relative;

  > * {
    box-sizing: border-box;
    height: 100%;

    :last-child,
    :last-child > :last-child,
    :last-child > :last-child > :last-child {
      margin-bottom: 0;
    }
  }
}

[class*="#{$prefix}-padding"] {
  box-sizing: border-box;
}

@if $includeFlexFallback {
  .#{$prefix}-grid > * {
    width: 100%;
  }

  @supports (display: grid) {
    .#{$prefix}-grid {
      align-items: unset;
    }

    .#{$prefix}-grid > * {
      width: initial;
    }
  }
}

@each $name, $breakpoint in $allBreakpoints {
  @include grid-breakpoint-wrapper($breakpoint, $first) {
    @if $includeFlexFallback {
      @include grid-legacy-zeros($breakpoint, $allBreakpoints, $name);
      @include grid-legacy-columns($breakpoint, $first, $last, $name, $allBreakpoints);
      @if is-same-breakpoint($breakpoint, $last) == false {
        @include grid-legacy-heights($name, $rows, $rowHeight);
      }
    }

    @if (map-has-key($allBreakpoints, $name)) {
      @include grid-margin($breakpoint, $last);
      @include grid-padding($breakpoint);
      @include grid-legacy-wrapper($includeFlexFallback) {
        @include grid-columns($breakpoint, $first, $last) {
          display: grid;
          grid-auto-rows: minmax($rowHeight * 1rem, min-content);
        }
        @include grid-variables($breakpoint, $first, $rows, $rowHeight);
      }
    }
  }
}
